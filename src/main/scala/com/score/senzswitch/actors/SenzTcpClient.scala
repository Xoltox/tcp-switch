package com.score.senzswitch.actors

import java.net.{InetAddress, InetSocketAddress}

import akka.actor.{Actor, ActorRef, ActorSystem, Props}
import akka.io.Tcp._
import akka.io.{IO, Tcp}
import akka.util.ByteString
import org.slf4j.LoggerFactory


object SenzTcpClient {
  def props: Props = Props(new SenzTcpClient)
}

class SenzTcpClient extends Actor {

  import context._

  var connection: ActorRef = _

  def logger = LoggerFactory.getLogger(this.getClass)

  // connect to epic tcp end
  val remoteAddress = new InetSocketAddress(InetAddress.getByName("localhost"), 8000)
  IO(Tcp) ! Connect(remoteAddress)

  override def preStart() = {
    logger.info("[_________START ACTOR__________] " + context.self.path)
  }

  override def postStop() = {
    logger.info("[_________STOP ACTOR__________] " + context.self.path)
  }

  override def receive: Receive = {
    case c@Connected(remote, local) =>
      logger.debug("TCP connected")

      connection = sender()
      connection ! Register(self)

      // send reg senz when connect
      val s = "DATA #chatzphoto /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAKBueIx4ZKCMgoy0qqC+8P//8Nzc8P//////////////////////////////////////////////////////////2wBDAaq0tPDS8P//////////////////////////////////////////////////////////////////////////////wAARCAKAA1UDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCGiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBaVeopKUUASnpTh0FNPSlHQUABptONNoAKKKKAFHQ0qfeptPTrQAkn3qbTn+9TaACiiigB2fkx702iigAoooNACUtIKWgAooooAKUn5cUlJ3oAWiiigAooooAKKKKAFoFFKvUUASUjdKWmv0oAZRRRQAUlLRQAUUUUAFFFFABRRRQAlLSUtABRRRQAUUUUAOQc089KRBxQetACjpRRQelADDTaU0lABRRRQAlFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAQ0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUALSikpRQBKelOHQU09KcOgoAQ02nEUlAAaSnEcU2gAp8fWmU5PvUAI33jSUrfeNJQAUUUUAFFFFABSGlpDQAtFFFABRRRQAUgpTSCgBaKKKACiiigAoopaACnJ1ptPTpQA6mP1p9RnrQAlFFFABRSUtABRRRQAUUUUAFJS0lAB/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAKBueIx4ZKCMgoy0qqC+8P//8Nzc8P//////////////////////////////////////////////////////////2wBDAaq0tPDS8P//////////////////////////////////////////////////////////////////////////////wAARCAKAA1UDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCGiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBaVeopKUUASnpTh0FNPSlHQUABptONNoAKKKKAFHQ0qfeptPTrQAkn3qbTn+9TaACiiigB2fkx702iigAoooNACUtIKWgAooooAKUn5cUlJ3oAWiiigAooooAKKKKAFoFFKvUUASUjdKWmv0oAZRRRQAUlLRQAUUUUAFFFFABRRRQAlLSUtABRRRQAUUUUAOQc089KRBxQetACjpRRQelADDTaU0lABRRRQAlFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAQ0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUALSikpRQBKelOHQU09KcOgoAQ02nEUlAAaSnEcU2gAp8fWmU5PvUAI33jSUrfeNJQAUUUUAFFFFABSGlpDQAtFFFABRRRQAUgpTSCgBaKKKACiiigAoopaACnJ1ptPTpQA6mP1p9RnrQAlFFFABRSUtABRRRQAUUUUAFJS0lAB/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAKBueIx4ZKCMgoy0qqC+8P//8Nzc8P//////////////////////////////////////////////////////////2wBDAaq0tPDS8P//////////////////////////////////////////////////////////////////////////////wAARCAKAA1UDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCGiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBaVeopKUUASnpTh0FNPSlHQUABptONNoAKKKKAFHQ0qfeptPTrQAkn3qbTn+9TaACiiigB2fkx702iigAoooNACUtIKWgAooooAKUn5cUlJ3oAWiiigAooooAKKKKAFoFFKvUUASUjdKWmv0oAZRRRQAUlLRQAUUUUAFFFFABRRRQAlLSUtABRRRQAUUUUAOQc089KRBxQetACjpRRQelADDTaU0lABRRRQAlFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAQ0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUALSikpRQBKelOHQU09KcOgoAQ02nEUlAAaSnEcU2gAp8fWmU5PvUAI33jSUrfeNJQAUUUUAFFFFABSGlpDQAtFFFABRRRQAUgpTSCgBaKKKACiiigAoopaACnJ1ptPTpQA6mP1p9RnrQAlFFFABRSUtABRRRQAUUUUAFJS0lAB/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAKBueIx4ZKCMgoy0qqC+8P//8Nzc8P//////////////////////////////////////////////////////////2wBDAaq0tPDS8P//////////////////////////////////////////////////////////////////////////////wAARCAKAA1UDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCGiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBaVeopKUUASnpTh0FNPSlHQUABptONNoAKKKKAFHQ0qfeptPTrQAkn3qbTn+9TaACiiigB2fkx702iigAoooNACUtIKWgAooooAKUn5cUlJ3oAWiiigAooooAKKKKAFoFFKvUUASUjdKWmv0oAZRRRQAUlLRQAUUUUAFFFFABRRRQAlLSUtABRRRQAUUUUAOQc089KRBxQetACjpRRQelADDTaU0lABRRRQAlFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAQ0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUALSikpRQBKelOHQU09KcOgoAQ02nEUlAAaSnEcU2gAp8fWmU5PvUAI33jSUrfeNJQAUUUUAFFFFABSGlpDQAtFFFABRRRQAUgpTSCgBaKKKACiiigAoopaACnJ1ptPTpQA6mP1p9RnrQAlFFFABRSUtABRRRQAUUUUAFJS"
      connection ! Write(ByteString(s))
    case CommandFailed(_: Connect) =>
      // failed to connect
      logger.error("CommandFailed[Failed to connect]")
  }
}

//object Main extends App {
//
//  def logger = LoggerFactory.getLogger(this.getClass)
//
//  logger.info("Booting application")
//
//  // start actor
//  implicit val system = ActorSystem("senz")
//  system.actorOf(SenzTcpClient.props, name = "SenzTcpClient")
//
//}

